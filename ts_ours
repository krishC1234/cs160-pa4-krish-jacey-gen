.data

out_of_bounds_msg: .string "out-of-bounds array access"
invalid_alloc_msg: .string "invalid allocation amount"
        
.text

.globl main
main:
  pushq %rbp
  movq %rsp, %rbp
  subq $624, %rsp
  movq $0, -8(%rbp)
  movq $0, -16(%rbp)
  movq $0, -24(%rbp)
  movq $0, -32(%rbp)
  movq $0, -40(%rbp)
  movq $0, -48(%rbp)
  movq $0, -56(%rbp)
  movq $0, -64(%rbp)
  movq $0, -72(%rbp)
  movq $0, -80(%rbp)
  movq $0, -88(%rbp)
  movq $0, -96(%rbp)
  movq $0, -104(%rbp)
  movq $0, -112(%rbp)
  movq $0, -120(%rbp)
  movq $0, -128(%rbp)
  movq $0, -136(%rbp)
  movq $0, -144(%rbp)
  movq $0, -152(%rbp)
  movq $0, -160(%rbp)
  movq $0, -168(%rbp)
  movq $0, -176(%rbp)
  movq $0, -184(%rbp)
  movq $0, -192(%rbp)
  movq $0, -200(%rbp)
  movq $0, -208(%rbp)
  movq $0, -216(%rbp)
  movq $0, -224(%rbp)
  movq $0, -232(%rbp)
  movq $0, -240(%rbp)
  movq $0, -248(%rbp)
  movq $0, -256(%rbp)
  movq $0, -264(%rbp)
  movq $0, -272(%rbp)
  movq $0, -280(%rbp)
  movq $0, -288(%rbp)
  movq $0, -296(%rbp)
  movq $0, -304(%rbp)
  movq $0, -312(%rbp)
  movq $0, -320(%rbp)
  movq $0, -328(%rbp)
  movq $0, -336(%rbp)
  movq $0, -344(%rbp)
  movq $0, -352(%rbp)
  movq $0, -360(%rbp)
  movq $0, -368(%rbp)
  movq $0, -376(%rbp)
  movq $0, -384(%rbp)
  movq $0, -392(%rbp)
  movq $0, -400(%rbp)
  movq $0, -408(%rbp)
  movq $0, -416(%rbp)
  movq $0, -424(%rbp)
  movq $0, -432(%rbp)
  movq $0, -440(%rbp)
  movq $0, -448(%rbp)
  movq $0, -456(%rbp)
  movq $0, -464(%rbp)
  movq $0, -472(%rbp)
  movq $0, -480(%rbp)
  movq $0, -488(%rbp)
  movq $0, -496(%rbp)
  movq $0, -504(%rbp)
  movq $0, -512(%rbp)
  movq $0, -520(%rbp)
  movq $0, -528(%rbp)
  movq $0, -536(%rbp)
  movq $0, -544(%rbp)
  movq $0, -552(%rbp)
  movq $0, -560(%rbp)
  movq $0, -568(%rbp)
  movq $0, -576(%rbp)
  movq $0, -584(%rbp)
  movq $0, -592(%rbp)
  movq $0, -600(%rbp)
  movq $0, -608(%rbp)
  movq $0, -616(%rbp)
  jmp main_entry

main_entry:
  movq $0, -568(%rbp)
  movq $0, %r8
  subq $7, %r8
  movq %r8, -8(%rbp)
  movq -568(%rbp), %r8
  imulq -8(%rbp), %r8
  movq %r8, -96(%rbp)
  movq $6, %r8
  cmpq -96(%rbp), %r8
  movq $0, %r8
  sete %r8b
  movq %r8, -184(%rbp)
  movq -184(%rbp), %r8
  movq %r8, -560(%rbp)
  movq $5, -592(%rbp)
  jmp main_lbl1

main_lbl1:
  movq $3, %r8
  cmpq $0, %r8
  jne main_lbl2
  jmp main_lbl3

main_lbl10:
  movq $2, %r8
  subq $6, %r8
  movq %r8, -104(%rbp)
  movq $1, %r8
  cmpq -104(%rbp), %r8
  movq $0, %r8
  setg %r8b
  movq %r8, -112(%rbp)
  movq -112(%rbp), %rax
  cqo
  idivq -584(%rbp)
  movq %rax, -120(%rbp)
  cmpq $0, -120(%rbp)
  jne main_lbl11
  jmp main_lbl12

main_lbl11:
  movq -576(%rbp), %r8
  movq %r8, -560(%rbp)
  movq -600(%rbp), %r8
  cmpq -568(%rbp), %r8
  movq $0, %r8
  setge %r8b
  movq %r8, -128(%rbp)
  movq -128(%rbp), %r8
  addq -576(%rbp), %r8
  movq %r8, -136(%rbp)
  movq -136(%rbp), %r8
  movq %r8, -576(%rbp)
  movq $2, -608(%rbp)
  movq $0, %r8
  subq -616(%rbp), %r8
  movq %r8, -152(%rbp)
  movq $0, %r8
  subq -152(%rbp), %r8
  movq %r8, -144(%rbp)
  movq -144(%rbp), %r8
  movq %r8, -616(%rbp)
  movq -600(%rbp), %r8
  cmpq -568(%rbp), %r8
  movq $0, %r8
  sete %r8b
  movq %r8, -160(%rbp)
  movq -560(%rbp), %r8
  addq $0, %r8
  movq %r8, -168(%rbp)
  movq -160(%rbp), %rax
  cqo
  idivq -168(%rbp)
  movq %rax, -176(%rbp)
  movq $0, %r8
  subq -608(%rbp), %r8
  movq %r8, -192(%rbp)
  movq -600(%rbp), %r8
  cmpq -192(%rbp), %r8
  movq $0, %r8
  setl %r8b
  movq %r8, -200(%rbp)
  movq -176(%rbp), %r8
  addq -200(%rbp), %r8
  movq %r8, -208(%rbp)
  movq -208(%rbp), %r8
  movq %r8, -608(%rbp)
  movq $0, -568(%rbp)
  movq $2, -608(%rbp)
  movq $0, %r8
  subq -560(%rbp), %r8
  movq %r8, -224(%rbp)
  movq $0, %r8
  subq -224(%rbp), %r8
  movq %r8, -216(%rbp)
  cmpq $9, -216(%rbp)
  movq $0, %r8
  setl %r8b
  movq %r8, -232(%rbp)
  movq -232(%rbp), %r8
  movq %r8, -592(%rbp)
  jmp main_lbl10

main_lbl12:
  jmp main_lbl1

main_lbl13:
  movq $10, %r8
  cmpq $0, %r8
  jne main_lbl14
  jmp main_lbl15

main_lbl14:
  movq -608(%rbp), %r8
  movq %r8, -576(%rbp)
  cmpq $0, -608(%rbp)
  jne main_lbl16
  jmp main_lbl17

main_lbl15:
  movq $3, -576(%rbp)
  movq -560(%rbp), %r8
  movq %r8, -560(%rbp)
  movq $9, -608(%rbp)
  movq $2, -560(%rbp)
  movq -616(%rbp), %r8
  cmpq -568(%rbp), %r8
  movq $0, %r8
  setle %r8b
  movq %r8, -512(%rbp)
  movq -592(%rbp), %r8
  imulq -512(%rbp), %r8
  movq %r8, -520(%rbp)
  movq $6, %r8
  cmpq -520(%rbp), %r8
  movq $0, %r8
  sete %r8b
  movq %r8, -528(%rbp)
  movq -528(%rbp), %rax
  jmp main_epilogue

main_lbl16:
  movq $7, -576(%rbp)
  movq $4, -584(%rbp)
  movq $3, %r8
  addq -616(%rbp), %r8
  movq %r8, -248(%rbp)
  movq $0, %r8
  subq -248(%rbp), %r8
  movq %r8, -240(%rbp)
  movq -240(%rbp), %r8
  movq %r8, -592(%rbp)
  movq -560(%rbp), %r8
  movq %r8, -576(%rbp)
  jmp main_lbl18

main_lbl17:
  movq -584(%rbp), %r8
  addq $6, %r8
  movq %r8, -264(%rbp)
  movq $0, %r8
  subq -264(%rbp), %r8
  movq %r8, -256(%rbp)
  movq -256(%rbp), %r8
  movq %r8, -560(%rbp)
  movq -568(%rbp), %r8
  movq %r8, -616(%rbp)
  movq $7, %r8
  addq $9, %r8
  movq %r8, -280(%rbp)
  movq -280(%rbp), %r8
  movq %r8, -560(%rbp)
  movq -576(%rbp), %r8
  movq %r8, -560(%rbp)
  movq $6, -600(%rbp)
  movq $1, %r8
  cmpq -584(%rbp), %r8
  movq $0, %r8
  setg %r8b
  movq %r8, -296(%rbp)
  movq $1, %r8
  cmpq -592(%rbp), %r8
  movq $0, %r8
  setge %r8b
  movq %r8, -304(%rbp)
  movq -296(%rbp), %rax
  cqo
  idivq -304(%rbp)
  movq %rax, -312(%rbp)
  movq $0, %r8
  subq -312(%rbp), %r8
  movq %r8, -288(%rbp)
  movq -288(%rbp), %r8
  movq %r8, -560(%rbp)
  movq -600(%rbp), %r8
  cmpq -576(%rbp), %r8
  movq $0, %r8
  setne %r8b
  movq %r8, -328(%rbp)
  movq $0, %r8
  subq -328(%rbp), %r8
  movq %r8, -320(%rbp)
  movq -592(%rbp), %r8
  cmpq -320(%rbp), %r8
  movq $0, %r8
  sete %r8b
  movq %r8, -336(%rbp)
  movq -336(%rbp), %r8
  movq %r8, -568(%rbp)
  movq -600(%rbp), %r8
  movq %r8, -576(%rbp)
  jmp main_lbl18

main_lbl18:
  movq $0, %r8
  subq -592(%rbp), %r8
  movq %r8, -344(%rbp)
  cmpq $1, -344(%rbp)
  movq $0, %r8
  setg %r8b
  movq %r8, -352(%rbp)
  movq -352(%rbp), %r8
  subq -560(%rbp), %r8
  movq %r8, -368(%rbp)
  movq -368(%rbp), %r8
  movq %r8, -568(%rbp)
  movq -568(%rbp), %r8
  addq -592(%rbp), %r8
  movq %r8, -376(%rbp)
  movq -376(%rbp), %r8
  cmpq -584(%rbp), %r8
  movq $0, %r8
  setl %r8b
  movq %r8, -384(%rbp)
  movq -384(%rbp), %r8
  movq %r8, -592(%rbp)
  movq $0, %r8
  subq -560(%rbp), %r8
  movq %r8, -392(%rbp)
  cmpq $0, -392(%rbp)
  jne main_lbl19
  jmp main_lbl20

main_lbl19:
  movq $9, -592(%rbp)
  movq $0, %r8
  subq -560(%rbp), %r8
  movq %r8, -400(%rbp)
  movq -400(%rbp), %rax
  cqo
  idivq -568(%rbp)
  movq %rax, -408(%rbp)
  movq -560(%rbp), %r8
  addq -408(%rbp), %r8
  movq %r8, -416(%rbp)
  movq -416(%rbp), %r8
  movq %r8, -584(%rbp)
  movq $0, %r8
  subq $0, %r8
  movq %r8, -424(%rbp)
  movq -584(%rbp), %r8
  cmpq -424(%rbp), %r8
  movq $0, %r8
  setle %r8b
  movq %r8, -432(%rbp)
  movq -432(%rbp), %r8
  movq %r8, -608(%rbp)
  movq -616(%rbp), %r8
  movq %r8, -592(%rbp)
  cmpq $2, -592(%rbp)
  movq $0, %r8
  setne %r8b
  movq %r8, -440(%rbp)
  movq -440(%rbp), %r8
  movq %r8, -568(%rbp)
  jmp main_lbl21

main_lbl2:
  movq -576(%rbp), %r8
  movq %r8, -560(%rbp)
  movq $0, %r8
  subq -576(%rbp), %r8
  movq %r8, -272(%rbp)
  movq -272(%rbp), %r8
  movq %r8, -568(%rbp)
  jmp main_lbl4

main_lbl20:
  movq -600(%rbp), %r8
  cmpq -608(%rbp), %r8
  movq $0, %r8
  setg %r8b
  movq %r8, -456(%rbp)
  movq -456(%rbp), %r8
  movq %r8, -608(%rbp)
  movq $5, -560(%rbp)
  movq -568(%rbp), %r8
  movq %r8, -616(%rbp)
  movq $5, -616(%rbp)
  movq $10, -600(%rbp)
  movq -584(%rbp), %r8
  movq %r8, -616(%rbp)
  jmp main_lbl21

main_lbl21:
  movq -584(%rbp), %r8
  movq %r8, -576(%rbp)
  movq $7, %r8
  cmpq $0, %r8
  jne main_lbl22
  jmp main_lbl23

main_lbl22:
  movq $10, -584(%rbp)
  movq $3, -568(%rbp)
  movq $8, -592(%rbp)
  movq $0, %r8
  subq $7, %r8
  movq %r8, -464(%rbp)
  movq -600(%rbp), %r8
  cmpq -464(%rbp), %r8
  movq $0, %r8
  setle %r8b
  movq %r8, -472(%rbp)
  movq -472(%rbp), %r8
  movq %r8, -616(%rbp)
  movq -568(%rbp), %r8
  movq %r8, -584(%rbp)
  movq $4, -576(%rbp)
  movq -608(%rbp), %r8
  movq %r8, -600(%rbp)
  movq $0, %r8
  subq $8, %r8
  movq %r8, -480(%rbp)
  movq -480(%rbp), %r8
  movq %r8, -584(%rbp)
  movq $0, %r8
  subq -608(%rbp), %r8
  movq %r8, -488(%rbp)
  movq -488(%rbp), %r8
  movq %r8, -584(%rbp)
  jmp main_lbl15

main_lbl23:
  movq -600(%rbp), %r8
  movq %r8, -560(%rbp)
  movq -568(%rbp), %r8
  movq %r8, -560(%rbp)
  movq $7, -600(%rbp)
  movq $2, -600(%rbp)
  movq $2, -592(%rbp)
  movq $7, -608(%rbp)
  movq $4, -568(%rbp)
  jmp main_lbl24

main_lbl24:
  movq $0, %r8
  subq $7, %r8
  movq %r8, -496(%rbp)
  movq -496(%rbp), %rax
  cqo
  idivq -592(%rbp)
  movq %rax, -504(%rbp)
  movq -504(%rbp), %r8
  movq %r8, -616(%rbp)
  movq -584(%rbp), %r8
  movq %r8, -568(%rbp)
  movq $8, -592(%rbp)
  movq $4, -592(%rbp)
  jmp main_lbl13

main_lbl3:
  jmp main_lbl13

main_lbl4:
  cmpq $0, -584(%rbp)
  jne main_lbl5
  jmp main_lbl6

main_lbl5:
  movq $10, -592(%rbp)
  movq -576(%rbp), %r8
  movq %r8, -576(%rbp)
  movq -608(%rbp), %r8
  cmpq -616(%rbp), %r8
  movq $0, %r8
  setne %r8b
  movq %r8, -360(%rbp)
  movq -360(%rbp), %r8
  movq %r8, -600(%rbp)
  movq $0, %r8
  subq -616(%rbp), %r8
  movq %r8, -448(%rbp)
  movq -448(%rbp), %r8
  subq -592(%rbp), %r8
  movq %r8, -536(%rbp)
  movq -536(%rbp), %r8
  movq %r8, -568(%rbp)
  movq $0, %r8
  subq -592(%rbp), %r8
  movq %r8, -544(%rbp)
  movq -544(%rbp), %r8
  movq %r8, -584(%rbp)
  movq $1, -600(%rbp)
  movq -576(%rbp), %r8
  movq %r8, -568(%rbp)
  jmp main_lbl4

main_lbl6:
  cmpq $0, -592(%rbp)
  jne main_lbl7
  jmp main_lbl8

main_lbl7:
  movq $9, -592(%rbp)
  movq $0, %r8
  subq -616(%rbp), %r8
  movq %r8, -552(%rbp)
  movq -552(%rbp), %r8
  movq %r8, -576(%rbp)
  movq -616(%rbp), %r8
  movq %r8, -560(%rbp)
  movq -568(%rbp), %r8
  movq %r8, -568(%rbp)
  movq -568(%rbp), %r8
  cmpq -576(%rbp), %r8
  movq $0, %r8
  setl %r8b
  movq %r8, -16(%rbp)
  movq -16(%rbp), %r8
  movq %r8, -576(%rbp)
  movq $4, -600(%rbp)
  jmp main_lbl9

main_lbl8:
  movq -592(%rbp), %r8
  movq %r8, -560(%rbp)
  movq -616(%rbp), %r8
  movq %r8, -576(%rbp)
  movq -608(%rbp), %rax
  cqo
  idivq -568(%rbp)
  movq %rax, -24(%rbp)
  cmpq $0, -24(%rbp)
  movq $0, %r8
  setle %r8b
  movq %r8, -32(%rbp)
  movq -32(%rbp), %r8
  movq %r8, -608(%rbp)
  movq $0, %r8
  subq $9, %r8
  movq %r8, -40(%rbp)
  movq -40(%rbp), %r8
  movq %r8, -584(%rbp)
  movq $0, %r8
  subq -616(%rbp), %r8
  movq %r8, -48(%rbp)
  movq -48(%rbp), %r8
  movq %r8, -608(%rbp)
  movq -600(%rbp), %r8
  movq %r8, -576(%rbp)
  movq -600(%rbp), %r8
  movq %r8, -608(%rbp)
  movq $7, -568(%rbp)
  movq $10, -560(%rbp)
  jmp main_lbl9

main_lbl9:
  movq $1, %r8
  cmpq -576(%rbp), %r8
  movq $0, %r8
  sete %r8b
  movq %r8, -56(%rbp)
  movq -56(%rbp), %r8
  cmpq -576(%rbp), %r8
  movq $0, %r8
  setge %r8b
  movq %r8, -64(%rbp)
  movq -64(%rbp), %r8
  addq -560(%rbp), %r8
  movq %r8, -72(%rbp)
  movq -72(%rbp), %r8
  movq %r8, -608(%rbp)
  movq $0, %r8
  addq -560(%rbp), %r8
  movq %r8, -80(%rbp)
  movq -80(%rbp), %rax
  cqo
  movq $4, %r8
  idivq %r8
  movq %rax, -88(%rbp)
  movq -88(%rbp), %r8
  movq %r8, -576(%rbp)
  jmp main_lbl10

main_epilogue:
  movq %rbp, %rsp
  popq %rbp
  ret

.out_of_bounds:
  lea out_of_bounds_msg(%rip), %rdi
  call _cflat_panic

.invalid_alloc_length:
  lea invalid_alloc_msg(%rip), %rdi
  call _cflat_panic
        
