.data

.globl f1_
f1_: .quad "f1"


.globl f2_
f2_: .quad "f2"


.globl f3_
f3_: .quad "f3"


.globl f4_
f4_: .quad "f4"


.globl f5_
f5_: .quad "f5"


out_of_bounds_msg: .string "out-of-bounds array access"
invalid_alloc_msg: .string "invalid allocation amount"
        
.text

.globl f1
f1:
  pushq %rbp
  movq %rsp, %rbp
  subq $0, %rsp
  jmp f1_entry

f1_entry:
  movq $42, %rax
  jmp f1_epilogue

f1_epilogue:
  movq %rbp, %rsp
  popq %rbp
  ret

.globl f2
f2:
  pushq %rbp
  movq %rsp, %rbp
  subq $0, %rsp
  jmp f2_entry

f2_entry:
  movq p(%rip), %rax
  jmp f2_epilogue

f2_epilogue:
  movq %rbp, %rsp
  popq %rbp
  ret

.globl f3
f3:
  pushq %rbp
  movq %rsp, %rbp
  subq $16, %rsp
  movq $0, -8(%rbp)
  jmp f3_entry

f3_entry:
  movq p(%rip), %r8
  addq q(%rip), %r8
  movq %r8, -8(%rbp)
  movq -8(%rbp), %rax
  jmp f3_epilogue

f3_epilogue:
  movq %rbp, %rsp
  popq %rbp
  ret

.globl f4
f4:
  pushq %rbp
  movq %rsp, %rbp
  subq $16, %rsp
  movq $0, -8(%rbp)
  movq $0, -16(%rbp)
  jmp f4_entry

f4_entry:
  movq p(%rip), %r8
  addq q(%rip), %r8
  movq %r8, -8(%rbp)
  movq -8(%rbp), %r8
  addq r(%rip), %r8
  movq %r8, -16(%rbp)
  movq -16(%rbp), %rax
  jmp f4_epilogue

f4_epilogue:
  movq %rbp, %rsp
  popq %rbp
  ret

.globl f5
f5:
  pushq %rbp
  movq %rsp, %rbp
  subq $32, %rsp
  movq $0, -8(%rbp)
  movq $0, -16(%rbp)
  movq $0, -24(%rbp)
  jmp f5_entry

f5_entry:
  movq p(%rip), %r8
  addq q(%rip), %r8
  movq %r8, -8(%rbp)
  movq -8(%rbp), %r8
  addq r(%rip), %r8
  movq %r8, -16(%rbp)
  movq -16(%rbp), %r8
  addq s(%rip), %r8
  movq %r8, -24(%rbp)
  movq -24(%rbp), %rax
  jmp f5_epilogue

f5_epilogue:
  movq %rbp, %rsp
  popq %rbp
  ret

.globl main
main:
  pushq %rbp
  movq %rsp, %rbp
  subq $2736, %rsp
  movq $0, -8(%rbp)
  movq $0, -16(%rbp)
  movq $0, -24(%rbp)
  movq $0, -32(%rbp)
  movq $0, -40(%rbp)
  movq $0, -48(%rbp)
  movq $0, -56(%rbp)
  movq $0, -64(%rbp)
  movq $0, -72(%rbp)
  movq $0, -80(%rbp)
  movq $0, -88(%rbp)
  movq $0, -96(%rbp)
  movq $0, -104(%rbp)
  movq $0, -112(%rbp)
  movq $0, -120(%rbp)
  movq $0, -128(%rbp)
  movq $0, -136(%rbp)
  movq $0, -144(%rbp)
  movq $0, -152(%rbp)
  movq $0, -160(%rbp)
  movq $0, -168(%rbp)
  movq $0, -176(%rbp)
  movq $0, -184(%rbp)
  movq $0, -192(%rbp)
  movq $0, -200(%rbp)
  movq $0, -208(%rbp)
  movq $0, -216(%rbp)
  movq $0, -224(%rbp)
  movq $0, -232(%rbp)
  movq $0, -240(%rbp)
  movq $0, -248(%rbp)
  movq $0, -256(%rbp)
  movq $0, -264(%rbp)
  movq $0, -272(%rbp)
  movq $0, -280(%rbp)
  movq $0, -288(%rbp)
  movq $0, -296(%rbp)
  movq $0, -304(%rbp)
  movq $0, -312(%rbp)
  movq $0, -320(%rbp)
  movq $0, -328(%rbp)
  movq $0, -336(%rbp)
  movq $0, -344(%rbp)
  movq $0, -352(%rbp)
  movq $0, -360(%rbp)
  movq $0, -368(%rbp)
  movq $0, -376(%rbp)
  movq $0, -384(%rbp)
  movq $0, -392(%rbp)
  movq $0, -400(%rbp)
  movq $0, -408(%rbp)
  movq $0, -416(%rbp)
  movq $0, -424(%rbp)
  movq $0, -432(%rbp)
  movq $0, -440(%rbp)
  movq $0, -448(%rbp)
  movq $0, -456(%rbp)
  movq $0, -464(%rbp)
  movq $0, -472(%rbp)
  movq $0, -480(%rbp)
  movq $0, -488(%rbp)
  movq $0, -496(%rbp)
  movq $0, -504(%rbp)
  movq $0, -512(%rbp)
  movq $0, -520(%rbp)
  movq $0, -528(%rbp)
  movq $0, -536(%rbp)
  movq $0, -544(%rbp)
  movq $0, -552(%rbp)
  movq $0, -560(%rbp)
  movq $0, -568(%rbp)
  movq $0, -576(%rbp)
  movq $0, -584(%rbp)
  movq $0, -592(%rbp)
  movq $0, -600(%rbp)
  movq $0, -608(%rbp)
  movq $0, -616(%rbp)
  movq $0, -624(%rbp)
  movq $0, -632(%rbp)
  movq $0, -640(%rbp)
  movq $0, -648(%rbp)
  movq $0, -656(%rbp)
  movq $0, -664(%rbp)
  movq $0, -672(%rbp)
  movq $0, -680(%rbp)
  movq $0, -688(%rbp)
  movq $0, -696(%rbp)
  movq $0, -704(%rbp)
  movq $0, -712(%rbp)
  movq $0, -720(%rbp)
  movq $0, -728(%rbp)
  movq $0, -736(%rbp)
  movq $0, -744(%rbp)
  movq $0, -752(%rbp)
  movq $0, -760(%rbp)
  movq $0, -768(%rbp)
  movq $0, -776(%rbp)
  movq $0, -784(%rbp)
  movq $0, -792(%rbp)
  movq $0, -800(%rbp)
  movq $0, -808(%rbp)
  movq $0, -816(%rbp)
  movq $0, -824(%rbp)
  movq $0, -832(%rbp)
  movq $0, -840(%rbp)
  movq $0, -848(%rbp)
  movq $0, -856(%rbp)
  movq $0, -864(%rbp)
  movq $0, -872(%rbp)
  movq $0, -880(%rbp)
  movq $0, -888(%rbp)
  movq $0, -896(%rbp)
  movq $0, -904(%rbp)
  movq $0, -912(%rbp)
  movq $0, -920(%rbp)
  movq $0, -928(%rbp)
  movq $0, -936(%rbp)
  movq $0, -944(%rbp)
  movq $0, -952(%rbp)
  movq $0, -960(%rbp)
  movq $0, -968(%rbp)
  movq $0, -976(%rbp)
  movq $0, -984(%rbp)
  movq $0, -992(%rbp)
  movq $0, -1000(%rbp)
  movq $0, -1008(%rbp)
  movq $0, -1016(%rbp)
  movq $0, -1024(%rbp)
  movq $0, -1032(%rbp)
  movq $0, -1040(%rbp)
  movq $0, -1048(%rbp)
  movq $0, -1056(%rbp)
  movq $0, -1064(%rbp)
  movq $0, -1072(%rbp)
  movq $0, -1080(%rbp)
  movq $0, -1088(%rbp)
  movq $0, -1096(%rbp)
  movq $0, -1104(%rbp)
  movq $0, -1112(%rbp)
  movq $0, -1120(%rbp)
  movq $0, -1128(%rbp)
  movq $0, -1136(%rbp)
  movq $0, -1144(%rbp)
  movq $0, -1152(%rbp)
  movq $0, -1160(%rbp)
  movq $0, -1168(%rbp)
  movq $0, -1176(%rbp)
  movq $0, -1184(%rbp)
  movq $0, -1192(%rbp)
  movq $0, -1200(%rbp)
  movq $0, -1208(%rbp)
  movq $0, -1216(%rbp)
  movq $0, -1224(%rbp)
  movq $0, -1232(%rbp)
  movq $0, -1240(%rbp)
  movq $0, -1248(%rbp)
  movq $0, -1256(%rbp)
  movq $0, -1264(%rbp)
  movq $0, -1272(%rbp)
  movq $0, -1280(%rbp)
  movq $0, -1288(%rbp)
  movq $0, -1296(%rbp)
  movq $0, -1304(%rbp)
  movq $0, -1312(%rbp)
  movq $0, -1320(%rbp)
  movq $0, -1328(%rbp)
  movq $0, -1336(%rbp)
  movq $0, -1344(%rbp)
  movq $0, -1352(%rbp)
  movq $0, -1360(%rbp)
  movq $0, -1368(%rbp)
  movq $0, -1376(%rbp)
  movq $0, -1384(%rbp)
  movq $0, -1392(%rbp)
  movq $0, -1400(%rbp)
  movq $0, -1408(%rbp)
  movq $0, -1416(%rbp)
  movq $0, -1424(%rbp)
  movq $0, -1432(%rbp)
  movq $0, -1440(%rbp)
  movq $0, -1448(%rbp)
  movq $0, -1456(%rbp)
  movq $0, -1464(%rbp)
  movq $0, -1472(%rbp)
  movq $0, -1480(%rbp)
  movq $0, -1488(%rbp)
  movq $0, -1496(%rbp)
  movq $0, -1504(%rbp)
  movq $0, -1512(%rbp)
  movq $0, -1520(%rbp)
  movq $0, -1528(%rbp)
  movq $0, -1536(%rbp)
  movq $0, -1544(%rbp)
  movq $0, -1552(%rbp)
  movq $0, -1560(%rbp)
  movq $0, -1568(%rbp)
  movq $0, -1576(%rbp)
  movq $0, -1584(%rbp)
  movq $0, -1592(%rbp)
  movq $0, -1600(%rbp)
  movq $0, -1608(%rbp)
  movq $0, -1616(%rbp)
  movq $0, -1624(%rbp)
  movq $0, -1632(%rbp)
  movq $0, -1640(%rbp)
  movq $0, -1648(%rbp)
  movq $0, -1656(%rbp)
  movq $0, -1664(%rbp)
  movq $0, -1672(%rbp)
  movq $0, -1680(%rbp)
  movq $0, -1688(%rbp)
  movq $0, -1696(%rbp)
  movq $0, -1704(%rbp)
  movq $0, -1712(%rbp)
  movq $0, -1720(%rbp)
  movq $0, -1728(%rbp)
  movq $0, -1736(%rbp)
  movq $0, -1744(%rbp)
  movq $0, -1752(%rbp)
  movq $0, -1760(%rbp)
  movq $0, -1768(%rbp)
  movq $0, -1776(%rbp)
  movq $0, -1784(%rbp)
  movq $0, -1792(%rbp)
  movq $0, -1800(%rbp)
  movq $0, -1808(%rbp)
  movq $0, -1816(%rbp)
  movq $0, -1824(%rbp)
  movq $0, -1832(%rbp)
  movq $0, -1840(%rbp)
  movq $0, -1848(%rbp)
  movq $0, -1856(%rbp)
  movq $0, -1864(%rbp)
  movq $0, -1872(%rbp)
  movq $0, -1880(%rbp)
  movq $0, -1888(%rbp)
  movq $0, -1896(%rbp)
  movq $0, -1904(%rbp)
  movq $0, -1912(%rbp)
  movq $0, -1920(%rbp)
  movq $0, -1928(%rbp)
  movq $0, -1936(%rbp)
  movq $0, -1944(%rbp)
  movq $0, -1952(%rbp)
  movq $0, -1960(%rbp)
  movq $0, -1968(%rbp)
  movq $0, -1976(%rbp)
  movq $0, -1984(%rbp)
  movq $0, -1992(%rbp)
  movq $0, -2000(%rbp)
  movq $0, -2008(%rbp)
  movq $0, -2016(%rbp)
  movq $0, -2024(%rbp)
  movq $0, -2032(%rbp)
  movq $0, -2040(%rbp)
  movq $0, -2048(%rbp)
  movq $0, -2056(%rbp)
  movq $0, -2064(%rbp)
  movq $0, -2072(%rbp)
  movq $0, -2080(%rbp)
  movq $0, -2088(%rbp)
  movq $0, -2096(%rbp)
  movq $0, -2104(%rbp)
  movq $0, -2112(%rbp)
  movq $0, -2120(%rbp)
  movq $0, -2128(%rbp)
  movq $0, -2136(%rbp)
  movq $0, -2144(%rbp)
  movq $0, -2152(%rbp)
  movq $0, -2160(%rbp)
  movq $0, -2168(%rbp)
  movq $0, -2176(%rbp)
  movq $0, -2184(%rbp)
  movq $0, -2192(%rbp)
  movq $0, -2200(%rbp)
  movq $0, -2208(%rbp)
  movq $0, -2216(%rbp)
  movq $0, -2224(%rbp)
  movq $0, -2232(%rbp)
  movq $0, -2240(%rbp)
  movq $0, -2248(%rbp)
  movq $0, -2256(%rbp)
  movq $0, -2264(%rbp)
  movq $0, -2272(%rbp)
  movq $0, -2280(%rbp)
  movq $0, -2288(%rbp)
  movq $0, -2296(%rbp)
  movq $0, -2304(%rbp)
  movq $0, -2312(%rbp)
  movq $0, -2320(%rbp)
  movq $0, -2328(%rbp)
  movq $0, -2336(%rbp)
  movq $0, -2344(%rbp)
  movq $0, -2352(%rbp)
  movq $0, -2360(%rbp)
  movq $0, -2368(%rbp)
  movq $0, -2376(%rbp)
  movq $0, -2384(%rbp)
  movq $0, -2392(%rbp)
  movq $0, -2400(%rbp)
  movq $0, -2408(%rbp)
  movq $0, -2416(%rbp)
  movq $0, -2424(%rbp)
  movq $0, -2432(%rbp)
  movq $0, -2440(%rbp)
  movq $0, -2448(%rbp)
  movq $0, -2456(%rbp)
  movq $0, -2464(%rbp)
  movq $0, -2472(%rbp)
  movq $0, -2480(%rbp)
  movq $0, -2488(%rbp)
  movq $0, -2496(%rbp)
  movq $0, -2504(%rbp)
  movq $0, -2512(%rbp)
  movq $0, -2520(%rbp)
  movq $0, -2528(%rbp)
  movq $0, -2536(%rbp)
  movq $0, -2544(%rbp)
  movq $0, -2552(%rbp)
  movq $0, -2560(%rbp)
  movq $0, -2568(%rbp)
  movq $0, -2576(%rbp)
  movq $0, -2584(%rbp)
  movq $0, -2592(%rbp)
  movq $0, -2600(%rbp)
  movq $0, -2608(%rbp)
  movq $0, -2616(%rbp)
  movq $0, -2624(%rbp)
  movq $0, -2632(%rbp)
  movq $0, -2640(%rbp)
  movq $0, -2648(%rbp)
  movq $0, -2656(%rbp)
  movq $0, -2664(%rbp)
  movq $0, -2672(%rbp)
  movq $0, -2680(%rbp)
  movq $0, -2688(%rbp)
  movq $0, -2696(%rbp)
  movq $0, -2704(%rbp)
  movq $0, -2712(%rbp)
  movq $0, -2720(%rbp)
  movq $0, -2728(%rbp)
  jmp main_entry

main_entry:
  movq $0, -2592(%rbp)
  movq -2592(%rbp), %r8
  cmpq -2680(%rbp), %r8
  movq $0, %r8
  setne %r8b
  movq %r8, -8(%rbp)
  movq -8(%rbp), %r8
  movq %r8, -2504(%rbp)
  movq -2416(%rbp), %r8
  addq $8, %r8
  movq %r8, -896(%rbp)
  movq $0, %r8
  subq -2504(%rbp), %r8
  movq %r8, -1784(%rbp)
  pushq -1784(%rbp)
  pushq -896(%rbp)
  call f3
  movq %rax, -1880(%rbp)
  addq $16, %rsp
  jmp main_lbl1

main_lbl1:
  movq $1, %r8
  cmpq -1880(%rbp), %r8
  movq $0, %r8
  sete %r8b
  movq %r8, -1968(%rbp)
  movq -1968(%rbp), %r8
  movq %r8, -2416(%rbp)
  movq -2704(%rbp), %r8
  movq %r8, -2704(%rbp)
  call f1
  movq %rax, -2056(%rbp)
  addq $0, %rsp
  jmp main_lbl2

main_lbl10:
  movq $0, %r8
  subq -544(%rbp), %r8
  movq %r8, -280(%rbp)
  movq -280(%rbp), %r8
  movq %r8, -2408(%rbp)
  call f1
  movq %rax, -632(%rbp)
  addq $0, %rsp
  jmp main_lbl11

main_lbl100:
  pushq $7
  pushq $0
  call *-2552(%rbp)
  movq %rax, -184(%rbp)
  addq $16, %rsp
  jmp main_lbl101

main_lbl101:
  movq $0, %r8
  subq -2696(%rbp), %r8
  movq %r8, -200(%rbp)
  pushq -200(%rbp)
  pushq -184(%rbp)
  call f3
  movq %rax, -208(%rbp)
  addq $16, %rsp
  jmp main_lbl102

main_lbl102:
  pushq $0
  pushq $2
  call *-2560(%rbp)
  movq %rax, -216(%rbp)
  addq $16, %rsp
  jmp main_lbl103

main_lbl103:
  movq -216(%rbp), %r8
  cmpq -2680(%rbp), %r8
  movq $0, %r8
  setge %r8b
  movq %r8, -224(%rbp)
  call f1
  movq %rax, -232(%rbp)
  addq $0, %rsp
  jmp main_lbl104

main_lbl104:
  movq -2504(%rbp), %r8
  cmpq -232(%rbp), %r8
  movq $0, %r8
  setg %r8b
  movq %r8, -240(%rbp)
  cmpq $9, -2720(%rbp)
  movq $0, %r8
  setle %r8b
  movq %r8, -248(%rbp)
  pushq $0
  pushq -248(%rbp)
  pushq -240(%rbp)
  call f4
  movq %rax, -256(%rbp)
  addq $32, %rsp
  jmp main_lbl105

main_lbl105:
  movq $0, %r8
  subq $7, %r8
  movq %r8, -264(%rbp)
  pushq -2696(%rbp)
  pushq -2712(%rbp)
  pushq -2504(%rbp)
  pushq -264(%rbp)
  call f5
  movq %rax, -272(%rbp)
  addq $32, %rsp
  jmp main_lbl106

main_lbl106:
  pushq -272(%rbp)
  pushq -256(%rbp)
  pushq -224(%rbp)
  pushq -208(%rbp)
  call f5
  movq %rax, -288(%rbp)
  addq $32, %rsp
  jmp main_lbl107

main_lbl107:
  movq -288(%rbp), %r8
  movq %r8, -2712(%rbp)
  jmp main_lbl80

main_lbl108:
  cmpq $0, -2592(%rbp)
  jne main_lbl109
  jmp main_lbl110

main_lbl109:
  movq $8, %r8
  imulq $9, %r8
  movq %r8, -296(%rbp)
  call f1
  movq %rax, -304(%rbp)
  addq $0, %rsp
  jmp main_lbl111

main_lbl11:
  pushq -632(%rbp)
  pushq -2696(%rbp)
  pushq -2680(%rbp)
  call f4
  movq %rax, -720(%rbp)
  addq $32, %rsp
  jmp main_lbl12

main_lbl110:
  jmp main_lbl17

main_lbl111:
  pushq -304(%rbp)
  pushq -2720(%rbp)
  pushq -2720(%rbp)
  call f4
  movq %rax, -312(%rbp)
  addq $32, %rsp
  jmp main_lbl112

main_lbl112:
  movq -296(%rbp), %r8
  cmpq -312(%rbp), %r8
  movq $0, %r8
  setl %r8b
  movq %r8, -320(%rbp)
  pushq $5
  pushq -2712(%rbp)
  pushq -2712(%rbp)
  call *-2704(%rbp)
  movq %rax, -328(%rbp)
  addq $32, %rsp
  jmp main_lbl113

main_lbl113:
  pushq -328(%rbp)
  call f2
  movq %rax, -336(%rbp)
  addq $16, %rsp
  jmp main_lbl114

main_lbl114:
  pushq -2504(%rbp)
  pushq -336(%rbp)
  pushq -320(%rbp)
  pushq $0
  call *-2600(%rbp)
  movq %rax, -344(%rbp)
  addq $32, %rsp
  jmp main_lbl115

main_lbl115:
  pushq -2504(%rbp)
  pushq $6
  pushq -2696(%rbp)
  call f4
  movq %rax, -352(%rbp)
  addq $32, %rsp
  jmp main_lbl116

main_lbl116:
  pushq $0
  call f2
  movq %rax, -360(%rbp)
  addq $16, %rsp
  jmp main_lbl117

main_lbl117:
  call f1
  movq %rax, -376(%rbp)
  addq $0, %rsp
  jmp main_lbl118

main_lbl118:
  cmpq $7, -376(%rbp)
  movq $0, %r8
  setne %r8b
  movq %r8, -384(%rbp)
  call *-2616(%rbp)
  movq %rax, -392(%rbp)
  addq $0, %rsp
  jmp main_lbl119

main_lbl119:
  movq -384(%rbp), %r8
  cmpq -392(%rbp), %r8
  movq $0, %r8
  setg %r8b
  movq %r8, -400(%rbp)
  pushq -2416(%rbp)
  call *-2536(%rbp)
  movq %rax, -408(%rbp)
  addq $16, %rsp
  jmp main_lbl120

main_lbl12:
  pushq $5
  pushq -2712(%rbp)
  pushq -2504(%rbp)
  call *-2704(%rbp)
  movq %rax, -808(%rbp)
  addq $32, %rsp
  jmp main_lbl13

main_lbl120:
  pushq -2504(%rbp)
  pushq -408(%rbp)
  pushq -400(%rbp)
  pushq -360(%rbp)
  call f5
  movq %rax, -416(%rbp)
  addq $32, %rsp
  jmp main_lbl121

main_lbl121:
  pushq -416(%rbp)
  pushq -2592(%rbp)
  pushq -352(%rbp)
  pushq -344(%rbp)
  call *-2576(%rbp)
  addq $32, %rsp
  jmp main_lbl122

main_lbl122:
  call f1
  movq %rax, -424(%rbp)
  addq $0, %rsp
  jmp main_lbl123

main_lbl123:
  movq $10, %r8
  imulq -424(%rbp), %r8
  movq %r8, -432(%rbp)
  call f1
  movq %rax, -440(%rbp)
  addq $0, %rsp
  jmp main_lbl124

main_lbl124:
  cmpq $1, -440(%rbp)
  movq $0, %r8
  setge %r8b
  movq %r8, -448(%rbp)
  pushq $3
  pushq -2504(%rbp)
  call *-2544(%rbp)
  movq %rax, -464(%rbp)
  addq $16, %rsp
  jmp main_lbl125

main_lbl125:
  pushq $0
  pushq -2712(%rbp)
  pushq -464(%rbp)
  pushq -448(%rbp)
  call f5
  movq %rax, -472(%rbp)
  addq $32, %rsp
  jmp main_lbl126

main_lbl126:
  call f1
  movq %rax, -480(%rbp)
  addq $0, %rsp
  jmp main_lbl127

main_lbl127:
  pushq -480(%rbp)
  pushq -2712(%rbp)
  call *-2568(%rbp)
  movq %rax, -488(%rbp)
  addq $16, %rsp
  jmp main_lbl128

main_lbl128:
  pushq -488(%rbp)
  pushq -2696(%rbp)
  pushq $10
  call *-2624(%rbp)
  movq %rax, -496(%rbp)
  addq $32, %rsp
  jmp main_lbl129

main_lbl129:
  pushq -496(%rbp)
  pushq -2696(%rbp)
  pushq -472(%rbp)
  pushq -432(%rbp)
  call f5
  movq %rax, -504(%rbp)
  addq $32, %rsp
  jmp main_lbl130

main_lbl13:
  call f1
  movq %rax, -904(%rbp)
  addq $0, %rsp
  jmp main_lbl14

main_lbl130:
  movq -504(%rbp), %r8
  movq %r8, -2408(%rbp)
  call *-2440(%rbp)
  movq %rax, -512(%rbp)
  addq $0, %rsp
  jmp main_lbl131

main_lbl131:
  call f1
  movq %rax, -520(%rbp)
  addq $0, %rsp
  jmp main_lbl132

main_lbl132:
  call f1
  movq %rax, -528(%rbp)
  addq $0, %rsp
  jmp main_lbl133

main_lbl133:
  movq -520(%rbp), %r8
  cmpq -528(%rbp), %r8
  movq $0, %r8
  setg %r8b
  movq %r8, -536(%rbp)
  movq $0, %r8
  subq $10, %r8
  movq %r8, -552(%rbp)
  movq -2416(%rbp), %r8
  addq $10, %r8
  movq %r8, -560(%rbp)
  pushq -560(%rbp)
  pushq -552(%rbp)
  pushq $3
  pushq -536(%rbp)
  call f5
  movq %rax, -568(%rbp)
  addq $32, %rsp
  jmp main_lbl134

main_lbl134:
  pushq -568(%rbp)
  pushq $4
  pushq -512(%rbp)
  pushq -2408(%rbp)
  call *-2520(%rbp)
  movq %rax, -576(%rbp)
  addq $32, %rsp
  jmp main_lbl135

main_lbl135:
  call f1
  movq %rax, -584(%rbp)
  addq $0, %rsp
  jmp main_lbl136

main_lbl136:
  pushq $9
  pushq -2592(%rbp)
  pushq -584(%rbp)
  call f4
  movq %rax, -592(%rbp)
  addq $32, %rsp
  jmp main_lbl137

main_lbl137:
  pushq -592(%rbp)
  call *-2632(%rbp)
  movq %rax, -600(%rbp)
  addq $16, %rsp
  jmp main_lbl138

main_lbl138:
  call f1
  movq %rax, -608(%rbp)
  addq $0, %rsp
  jmp main_lbl139

main_lbl139:
  pushq $4
  pushq -608(%rbp)
  pushq -600(%rbp)
  call f4
  movq %rax, -616(%rbp)
  addq $32, %rsp
  jmp main_lbl140

main_lbl14:
  movq $10, %r8
  subq -904(%rbp), %r8
  movq %r8, -992(%rbp)
  pushq $0
  pushq -992(%rbp)
  pushq -808(%rbp)
  pushq -720(%rbp)
  call f5
  movq %rax, -1080(%rbp)
  addq $32, %rsp
  jmp main_lbl15

main_lbl140:
  pushq -616(%rbp)
  pushq -576(%rbp)
  call f3
  addq $16, %rsp
  jmp main_lbl141

main_lbl141:
  call f1
  movq %rax, -624(%rbp)
  addq $0, %rsp
  jmp main_lbl142

main_lbl142:
  movq -624(%rbp), %r8
  movq %r8, -2712(%rbp)
  call f1
  movq %rax, -648(%rbp)
  addq $0, %rsp
  jmp main_lbl143

main_lbl143:
  pushq -2416(%rbp)
  pushq -648(%rbp)
  call f3
  movq %rax, -656(%rbp)
  addq $16, %rsp
  jmp main_lbl144

main_lbl144:
  movq $0, %r8
  subq -656(%rbp), %r8
  movq %r8, -640(%rbp)
  call f1
  movq %rax, -664(%rbp)
  addq $0, %rsp
  jmp main_lbl145

main_lbl145:
  movq -664(%rbp), %rax
  cqo
  idivq -2504(%rbp)
  movq %rax, -672(%rbp)
  pushq -672(%rbp)
  call f2
  movq %rax, -680(%rbp)
  addq $16, %rsp
  jmp main_lbl146

main_lbl146:
  cmpq $8, -2680(%rbp)
  movq $0, %r8
  setl %r8b
  movq %r8, -688(%rbp)
  movq -688(%rbp), %r8
  subq -2504(%rbp), %r8
  movq %r8, -696(%rbp)
  call f1
  movq %rax, -704(%rbp)
  addq $0, %rsp
  jmp main_lbl147

main_lbl147:
  pushq -704(%rbp)
  pushq -696(%rbp)
  pushq -680(%rbp)
  pushq -640(%rbp)
  call f5
  movq %rax, -712(%rbp)
  addq $32, %rsp
  jmp main_lbl148

main_lbl148:
  call f1
  movq %rax, -736(%rbp)
  addq $0, %rsp
  jmp main_lbl149

main_lbl149:
  pushq -2592(%rbp)
  pushq -736(%rbp)
  call *-2640(%rbp)
  movq %rax, -744(%rbp)
  addq $16, %rsp
  jmp main_lbl150

main_lbl15:
  pushq -1080(%rbp)
  call f2
  movq %rax, -1168(%rbp)
  addq $16, %rsp
  jmp main_lbl16

main_lbl150:
  movq $0, %r8
  subq -744(%rbp), %r8
  movq %r8, -728(%rbp)
  cmpq $1, -728(%rbp)
  movq $0, %r8
  setne %r8b
  movq %r8, -752(%rbp)
  pushq -752(%rbp)
  pushq -712(%rbp)
  call f3
  addq $16, %rsp
  jmp main_lbl151

main_lbl151:
  call *-2480(%rbp)
  addq $0, %rsp
  jmp main_lbl152

main_lbl152:
  pushq -2504(%rbp)
  call *-2648(%rbp)
  movq %rax, -760(%rbp)
  addq $16, %rsp
  jmp main_lbl153

main_lbl153:
  movq -2720(%rbp), %r8
  imulq -760(%rbp), %r8
  movq %r8, -768(%rbp)
  pushq -768(%rbp)
  call f2
  movq %rax, -776(%rbp)
  addq $16, %rsp
  jmp main_lbl154

main_lbl154:
  movq -776(%rbp), %r8
  movq %r8, -2408(%rbp)
  call f1
  movq %rax, -784(%rbp)
  addq $0, %rsp
  jmp main_lbl155

main_lbl155:
  movq -784(%rbp), %r8
  movq %r8, -2408(%rbp)
  call f1
  movq %rax, -792(%rbp)
  addq $0, %rsp
  jmp main_lbl156

main_lbl156:
  pushq -2592(%rbp)
  pushq -2680(%rbp)
  call *-2568(%rbp)
  movq %rax, -800(%rbp)
  addq $16, %rsp
  jmp main_lbl157

main_lbl157:
  call f1
  movq %rax, -816(%rbp)
  addq $0, %rsp
  jmp main_lbl158

main_lbl158:
  pushq $5
  pushq $5
  pushq -816(%rbp)
  call f4
  movq %rax, -824(%rbp)
  addq $32, %rsp
  jmp main_lbl159

main_lbl159:
  movq -800(%rbp), %r8
  cmpq -824(%rbp), %r8
  movq $0, %r8
  setle %r8b
  movq %r8, -832(%rbp)
  movq -792(%rbp), %r8
  subq -832(%rbp), %r8
  movq %r8, -840(%rbp)
  movq -840(%rbp), %r8
  movq %r8, -2680(%rbp)
  jmp main_lbl108

main_lbl16:
  movq -1168(%rbp), %r8
  movq %r8, -2416(%rbp)
  movq $4, -2408(%rbp)
  jmp main_lbl17

main_lbl160:
  movq $9, %r8
  cmpq $0, %r8
  jne main_lbl161
  jmp main_lbl162

main_lbl161:
  movq -2592(%rbp), %r8
  cmpq -2592(%rbp), %r8
  movq $0, %r8
  sete %r8b
  movq %r8, -848(%rbp)
  movq -848(%rbp), %r8
  movq %r8, -2712(%rbp)
  jmp main_lbl163

main_lbl162:
  movq -2504(%rbp), %rax
  cqo
  idivq -2712(%rbp)
  movq %rax, -1752(%rbp)
  movq -1752(%rbp), %r8
  movq %r8, -2416(%rbp)
  call f1
  movq %rax, -1768(%rbp)
  addq $0, %rsp
  jmp main_lbl253

main_lbl163:
  cmpq $0, -2504(%rbp)
  jne main_lbl164
  jmp main_lbl165

main_lbl164:
  movq -2408(%rbp), %r8
  movq %r8, -2416(%rbp)
  movq -2680(%rbp), %r8
  movq %r8, -2504(%rbp)
  pushq -2720(%rbp)
  pushq $8
  pushq -2592(%rbp)
  pushq -2504(%rbp)
  call f5
  movq %rax, -864(%rbp)
  addq $32, %rsp
  jmp main_lbl166

main_lbl165:
  jmp main_lbl187

main_lbl166:
  movq $6, %r8
  addq -864(%rbp), %r8
  movq %r8, -872(%rbp)
  movq $0, %r8
  subq -872(%rbp), %r8
  movq %r8, -856(%rbp)
  pushq $0
  call f2
  movq %rax, -880(%rbp)
  addq $16, %rsp
  jmp main_lbl167

main_lbl167:
  pushq -2592(%rbp)
  pushq -880(%rbp)
  pushq -856(%rbp)
  call f4
  addq $32, %rsp
  jmp main_lbl168

main_lbl168:
  call f1
  movq %rax, -888(%rbp)
  addq $0, %rsp
  jmp main_lbl169

main_lbl169:
  pushq -2408(%rbp)
  pushq -888(%rbp)
  call f3
  movq %rax, -912(%rbp)
  addq $16, %rsp
  jmp main_lbl170

main_lbl17:
  movq $0, %r8
  subq -2408(%rbp), %r8
  movq %r8, -1344(%rbp)
  call *-2424(%rbp)
  movq %rax, -1432(%rbp)
  addq $0, %rsp
  jmp main_lbl20

main_lbl170:
  call f1
  movq %rax, -920(%rbp)
  addq $0, %rsp
  jmp main_lbl171

main_lbl171:
  call f1
  movq %rax, -928(%rbp)
  addq $0, %rsp
  jmp main_lbl172

main_lbl172:
  movq -920(%rbp), %r8
  cmpq -928(%rbp), %r8
  movq $0, %r8
  setge %r8b
  movq %r8, -936(%rbp)
  pushq -936(%rbp)
  pushq -2720(%rbp)
  pushq -912(%rbp)
  call f4
  movq %rax, -944(%rbp)
  addq $32, %rsp
  jmp main_lbl173

main_lbl173:
  call f1
  movq %rax, -952(%rbp)
  addq $0, %rsp
  jmp main_lbl174

main_lbl174:
  movq -944(%rbp), %r8
  cmpq -952(%rbp), %r8
  movq $0, %r8
  setg %r8b
  movq %r8, -960(%rbp)
  movq $0, %r8
  subq -2696(%rbp), %r8
  movq %r8, -968(%rbp)
  pushq -2592(%rbp)
  call *-2632(%rbp)
  movq %rax, -976(%rbp)
  addq $16, %rsp
  jmp main_lbl175

main_lbl175:
  pushq -976(%rbp)
  pushq -968(%rbp)
  pushq $4
  call f4
  movq %rax, -984(%rbp)
  addq $32, %rsp
  jmp main_lbl176

main_lbl176:
  pushq -984(%rbp)
  pushq -960(%rbp)
  pushq $1
  pushq $3
  call *-2520(%rbp)
  addq $32, %rsp
  jmp main_lbl177

main_lbl177:
  call f1
  movq %rax, -1000(%rbp)
  addq $0, %rsp
  jmp main_lbl178

main_lbl178:
  call f1
  movq %rax, -1008(%rbp)
  addq $0, %rsp
  jmp main_lbl179

main_lbl179:
  pushq -1008(%rbp)
  call *-2648(%rbp)
  movq %rax, -1016(%rbp)
  addq $16, %rsp
  jmp main_lbl180

main_lbl18:
  pushq -2408(%rbp)
  call f2
  movq %rax, -1608(%rbp)
  addq $16, %rsp
  jmp main_lbl22

main_lbl180:
  pushq -1016(%rbp)
  call f2
  movq %rax, -1024(%rbp)
  addq $16, %rsp
  jmp main_lbl181

main_lbl181:
  pushq -1024(%rbp)
  pushq -1000(%rbp)
  pushq -2592(%rbp)
  pushq $10
  call f5
  movq %rax, -1032(%rbp)
  addq $32, %rsp
  jmp main_lbl182

main_lbl182:
  movq -1032(%rbp), %r8
  movq %r8, -2696(%rbp)
  call f1
  addq $0, %rsp
  jmp main_lbl183

main_lbl183:
  movq $1, -2504(%rbp)
  pushq $6
  call *-2528(%rbp)
  movq %rax, -1040(%rbp)
  addq $16, %rsp
  jmp main_lbl184

main_lbl184:
  pushq -2712(%rbp)
  pushq -1040(%rbp)
  pushq $8
  call *-2624(%rbp)
  addq $32, %rsp
  jmp main_lbl185

main_lbl185:
  pushq $6
  call *-2496(%rbp)
  addq $16, %rsp
  jmp main_lbl186

main_lbl186:
  movq $3, -2680(%rbp)
  jmp main_lbl163

main_lbl187:
  cmpq $3, -2720(%rbp)
  movq $0, %r8
  setge %r8b
  movq %r8, -1048(%rbp)
  cmpq $0, -1048(%rbp)
  jne main_lbl188
  jmp main_lbl189

main_lbl188:
  pushq -2408(%rbp)
  pushq $7
  call f3
  movq %rax, -1056(%rbp)
  addq $16, %rsp
  jmp main_lbl190

main_lbl189:
  cmpq $9, -2712(%rbp)
  movq $0, %r8
  setl %r8b
  movq %r8, -1160(%rbp)
  pushq -1160(%rbp)
  call f2
  movq %rax, -1176(%rbp)
  addq $16, %rsp
  jmp main_lbl201

main_lbl19:
  jmp main_lbl160

main_lbl190:
  call f1
  movq %rax, -1064(%rbp)
  addq $0, %rsp
  jmp main_lbl191

main_lbl191:
  call *-2440(%rbp)
  movq %rax, -1072(%rbp)
  addq $0, %rsp
  jmp main_lbl192

main_lbl192:
  pushq -1072(%rbp)
  pushq $2
  pushq -1064(%rbp)
  call f4
  movq %rax, -1088(%rbp)
  addq $32, %rsp
  jmp main_lbl193

main_lbl193:
  call *-2472(%rbp)
  movq %rax, -1096(%rbp)
  addq $0, %rsp
  jmp main_lbl194

main_lbl194:
  pushq -2504(%rbp)
  pushq -1096(%rbp)
  call f3
  movq %rax, -1104(%rbp)
  addq $16, %rsp
  jmp main_lbl195

main_lbl195:
  call f1
  movq %rax, -1112(%rbp)
  addq $0, %rsp
  jmp main_lbl196

main_lbl196:
  pushq -1112(%rbp)
  call f2
  movq %rax, -1120(%rbp)
  addq $16, %rsp
  jmp main_lbl197

main_lbl197:
  pushq -1120(%rbp)
  pushq $0
  pushq -1104(%rbp)
  call *-2704(%rbp)
  movq %rax, -1128(%rbp)
  addq $32, %rsp
  jmp main_lbl198

main_lbl198:
  pushq $1
  pushq -1128(%rbp)
  pushq -1088(%rbp)
  pushq -1056(%rbp)
  call f5
  addq $32, %rsp
  jmp main_lbl199

main_lbl199:
  call f1
  movq %rax, -1136(%rbp)
  addq $0, %rsp
  jmp main_lbl200

main_lbl2:
  movq $9, %r8
  cmpq -2056(%rbp), %r8
  movq $0, %r8
  sete %r8b
  movq %r8, -2144(%rbp)
  movq -2144(%rbp), %r8
  movq %r8, -2720(%rbp)
  call f1
  movq %rax, -2232(%rbp)
  addq $0, %rsp
  jmp main_lbl3

main_lbl20:
  pushq -1432(%rbp)
  pushq -2592(%rbp)
  pushq -1344(%rbp)
  call *-2728(%rbp)
  movq %rax, -1520(%rbp)
  addq $32, %rsp
  jmp main_lbl21

main_lbl200:
  movq -1136(%rbp), %r8
  cmpq -2592(%rbp), %r8
  movq $0, %r8
  setg %r8b
  movq %r8, -1144(%rbp)
  movq -1144(%rbp), %r8
  movq %r8, -2712(%rbp)
  movq -2712(%rbp), %r8
  movq %r8, -2720(%rbp)
  movq -2416(%rbp), %r8
  movq %r8, -2408(%rbp)
  movq -2416(%rbp), %r8
  movq %r8, -2504(%rbp)
  jmp main_lbl187

main_lbl201:
  movq $0, %r8
  subq -1176(%rbp), %r8
  movq %r8, -1152(%rbp)
  movq -1152(%rbp), %r8
  movq %r8, -2712(%rbp)
  movq -2696(%rbp), %r8
  movq %r8, -2416(%rbp)
  pushq $2
  call *-2512(%rbp)
  movq %rax, -1184(%rbp)
  addq $16, %rsp
  jmp main_lbl205

main_lbl202:
  call f1
  movq %rax, -1200(%rbp)
  addq $0, %rsp
  jmp main_lbl206

main_lbl203:
  movq $1, %rax
  cqo
  idivq -2712(%rbp)
  movq %rax, -1440(%rbp)
  pushq -1440(%rbp)
  pushq -2592(%rbp)
  call *-2568(%rbp)
  movq %rax, -1448(%rbp)
  addq $16, %rsp
  jmp main_lbl223

main_lbl204:
  call f1
  movq %rax, -1728(%rbp)
  addq $0, %rsp
  jmp main_lbl251

main_lbl205:
  movq -2408(%rbp), %r8
  cmpq -1184(%rbp), %r8
  movq $0, %r8
  setge %r8b
  movq %r8, -1192(%rbp)
  cmpq $0, -1192(%rbp)
  jne main_lbl202
  jmp main_lbl203

main_lbl206:
  pushq -2712(%rbp)
  pushq -1200(%rbp)
  call *-2640(%rbp)
  movq %rax, -1208(%rbp)
  addq $16, %rsp
  jmp main_lbl207

main_lbl207:
  movq -2720(%rbp), %r8
  cmpq -1208(%rbp), %r8
  movq $0, %r8
  sete %r8b
  movq %r8, -1216(%rbp)
  movq $0, %r8
  subq -2408(%rbp), %r8
  movq %r8, -1224(%rbp)
  movq $0, %r8
  cmpq -1224(%rbp), %r8
  movq $0, %r8
  sete %r8b
  movq %r8, -1232(%rbp)
  call *-2440(%rbp)
  movq %rax, -1240(%rbp)
  addq $0, %rsp
  jmp main_lbl208

main_lbl208:
  movq -2592(%rbp), %r8
  cmpq -1240(%rbp), %r8
  movq $0, %r8
  setne %r8b
  movq %r8, -1248(%rbp)
  call f1
  movq %rax, -1264(%rbp)
  addq $0, %rsp
  jmp main_lbl209

main_lbl209:
  movq -1264(%rbp), %r8
  addq $9, %r8
  movq %r8, -1272(%rbp)
  movq -2696(%rbp), %r8
  cmpq -1272(%rbp), %r8
  movq $0, %r8
  setg %r8b
  movq %r8, -1280(%rbp)
  pushq -1280(%rbp)
  pushq -1248(%rbp)
  pushq -1232(%rbp)
  pushq -1216(%rbp)
  call f5
  movq %rax, -1288(%rbp)
  addq $32, %rsp
  jmp main_lbl210

main_lbl21:
  movq $0, %r8
  subq -1520(%rbp), %r8
  movq %r8, -1256(%rbp)
  cmpq $0, -1256(%rbp)
  jne main_lbl18
  jmp main_lbl19

main_lbl210:
  movq -1288(%rbp), %r8
  movq %r8, -2680(%rbp)
  movq $1, -2408(%rbp)
  call f1
  movq %rax, -1312(%rbp)
  addq $0, %rsp
  jmp main_lbl211

main_lbl211:
  movq $0, %r8
  subq -1312(%rbp), %r8
  movq %r8, -1304(%rbp)
  pushq -2416(%rbp)
  call f2
  movq %rax, -1320(%rbp)
  addq $16, %rsp
  jmp main_lbl212

main_lbl212:
  call f1
  movq %rax, -1328(%rbp)
  addq $0, %rsp
  jmp main_lbl213

main_lbl213:
  movq $5, %r8
  subq -1328(%rbp), %r8
  movq %r8, -1336(%rbp)
  pushq -1336(%rbp)
  pushq -1320(%rbp)
  pushq -2408(%rbp)
  pushq -1304(%rbp)
  call *-2520(%rbp)
  movq %rax, -1352(%rbp)
  addq $32, %rsp
  jmp main_lbl214

main_lbl214:
  movq $0, %r8
  subq -1352(%rbp), %r8
  movq %r8, -1296(%rbp)
  movq -1296(%rbp), %r8
  movq %r8, -2680(%rbp)
  call f1
  movq %rax, -1360(%rbp)
  addq $0, %rsp
  jmp main_lbl215

main_lbl215:
  movq -1360(%rbp), %r8
  movq %r8, -2680(%rbp)
  pushq $6
  call f2
  movq %rax, -1368(%rbp)
  addq $16, %rsp
  jmp main_lbl216

main_lbl216:
  call f1
  movq %rax, -1376(%rbp)
  addq $0, %rsp
  jmp main_lbl217

main_lbl217:
  movq -1368(%rbp), %rax
  cqo
  idivq -1376(%rbp)
  movq %rax, -1384(%rbp)
  pushq -2592(%rbp)
  pushq -2680(%rbp)
  pushq -1384(%rbp)
  call *-2432(%rbp)
  addq $32, %rsp
  jmp main_lbl218

main_lbl218:
  movq $5, %r8
  subq $8, %r8
  movq %r8, -1392(%rbp)
  pushq -2680(%rbp)
  call *-2528(%rbp)
  movq %rax, -1400(%rbp)
  addq $16, %rsp
  jmp main_lbl219

main_lbl219:
  pushq -2416(%rbp)
  call *-2656(%rbp)
  movq %rax, -1408(%rbp)
  addq $16, %rsp
  jmp main_lbl220

main_lbl22:
  pushq -1608(%rbp)
  call f2
  movq %rax, -1696(%rbp)
  addq $16, %rsp
  jmp main_lbl23

main_lbl220:
  pushq -1408(%rbp)
  pushq -1400(%rbp)
  pushq -2592(%rbp)
  call f4
  movq %rax, -1416(%rbp)
  addq $32, %rsp
  jmp main_lbl221

main_lbl221:
  movq -1392(%rbp), %r8
  cmpq -1416(%rbp), %r8
  movq $0, %r8
  sete %r8b
  movq %r8, -1424(%rbp)
  pushq $10
  pushq -1424(%rbp)
  call *-2568(%rbp)
  addq $16, %rsp
  jmp main_lbl222

main_lbl222:
  jmp main_lbl204

main_lbl223:
  movq -2592(%rbp), %r8
  cmpq -2416(%rbp), %r8
  movq $0, %r8
  setle %r8b
  movq %r8, -1456(%rbp)
  call f1
  movq %rax, -1464(%rbp)
  addq $0, %rsp
  jmp main_lbl224

main_lbl224:
  pushq -2696(%rbp)
  pushq -1464(%rbp)
  pushq $0
  call f4
  movq %rax, -1472(%rbp)
  addq $32, %rsp
  jmp main_lbl225

main_lbl225:
  call f1
  movq %rax, -1480(%rbp)
  addq $0, %rsp
  jmp main_lbl226

main_lbl226:
  pushq -2696(%rbp)
  pushq -2696(%rbp)
  pushq -1480(%rbp)
  call f4
  movq %rax, -1488(%rbp)
  addq $32, %rsp
  jmp main_lbl227

main_lbl227:
  pushq -1488(%rbp)
  pushq -1472(%rbp)
  pushq -1456(%rbp)
  pushq $7
  call f5
  movq %rax, -1496(%rbp)
  addq $32, %rsp
  jmp main_lbl228

main_lbl228:
  movq -1448(%rbp), %r8
  cmpq -1496(%rbp), %r8
  movq $0, %r8
  setg %r8b
  movq %r8, -1504(%rbp)
  pushq -1504(%rbp)
  call f2
  addq $16, %rsp
  jmp main_lbl229

main_lbl229:
  pushq $7
  call f2
  movq %rax, -1512(%rbp)
  addq $16, %rsp
  jmp main_lbl230

main_lbl23:
  movq -1696(%rbp), %r8
  movq %r8, -2504(%rbp)
  call f1
  movq %rax, -1808(%rbp)
  addq $0, %rsp
  jmp main_lbl24

main_lbl230:
  pushq -2680(%rbp)
  pushq -1512(%rbp)
  call f3
  movq %rax, -1528(%rbp)
  addq $16, %rsp
  jmp main_lbl231

main_lbl231:
  movq -1528(%rbp), %r8
  movq %r8, -2680(%rbp)
  movq -2416(%rbp), %r8
  subq -2416(%rbp), %r8
  movq %r8, -1536(%rbp)
  movq -1536(%rbp), %r8
  movq %r8, -2696(%rbp)
  pushq -2408(%rbp)
  call f2
  movq %rax, -1552(%rbp)
  addq $16, %rsp
  jmp main_lbl232

main_lbl232:
  movq $0, %r8
  subq -1552(%rbp), %r8
  movq %r8, -1544(%rbp)
  pushq -2416(%rbp)
  call *-2512(%rbp)
  movq %rax, -1560(%rbp)
  addq $16, %rsp
  jmp main_lbl233

main_lbl233:
  pushq -1560(%rbp)
  pushq -1544(%rbp)
  call *-2560(%rbp)
  addq $16, %rsp
  jmp main_lbl234

main_lbl234:
  call f1
  movq %rax, -1576(%rbp)
  addq $0, %rsp
  jmp main_lbl235

main_lbl235:
  movq $0, %r8
  subq -1576(%rbp), %r8
  movq %r8, -1568(%rbp)
  call f1
  movq %rax, -1584(%rbp)
  addq $0, %rsp
  jmp main_lbl236

main_lbl236:
  call f1
  movq %rax, -1592(%rbp)
  addq $0, %rsp
  jmp main_lbl237

main_lbl237:
  pushq -2696(%rbp)
  pushq -1592(%rbp)
  pushq -1584(%rbp)
  call *-2624(%rbp)
  movq %rax, -1600(%rbp)
  addq $32, %rsp
  jmp main_lbl238

main_lbl238:
  call f1
  movq %rax, -1616(%rbp)
  addq $0, %rsp
  jmp main_lbl239

main_lbl239:
  pushq -1616(%rbp)
  call *-2528(%rbp)
  movq %rax, -1624(%rbp)
  addq $16, %rsp
  jmp main_lbl240

main_lbl24:
  cmpq $4, -1808(%rbp)
  movq $0, %r8
  sete %r8b
  movq %r8, -1816(%rbp)
  movq $0, %r8
  subq -1816(%rbp), %r8
  movq %r8, -1792(%rbp)
  pushq -2592(%rbp)
  pushq $10
  pushq -1792(%rbp)
  call f4
  movq %rax, -1824(%rbp)
  addq $32, %rsp
  jmp main_lbl25

main_lbl240:
  pushq -1624(%rbp)
  pushq -1600(%rbp)
  call *-2664(%rbp)
  movq %rax, -1632(%rbp)
  addq $16, %rsp
  jmp main_lbl241

main_lbl241:
  movq $0, %r8
  subq -2720(%rbp), %r8
  movq %r8, -1640(%rbp)
  pushq -1640(%rbp)
  pushq $0
  pushq $9
  pushq -1632(%rbp)
  call *-2608(%rbp)
  movq %rax, -1648(%rbp)
  addq $32, %rsp
  jmp main_lbl242

main_lbl242:
  pushq -1648(%rbp)
  pushq -1568(%rbp)
  pushq $0
  call f4
  addq $32, %rsp
  jmp main_lbl243

main_lbl243:
  pushq -2680(%rbp)
  pushq $2
  call *-2560(%rbp)
  movq %rax, -1664(%rbp)
  addq $16, %rsp
  jmp main_lbl244

main_lbl244:
  pushq -2504(%rbp)
  pushq -1664(%rbp)
  pushq -2696(%rbp)
  call f4
  movq %rax, -1672(%rbp)
  addq $32, %rsp
  jmp main_lbl245

main_lbl245:
  movq $0, %r8
  subq -1672(%rbp), %r8
  movq %r8, -1656(%rbp)
  pushq -2712(%rbp)
  pushq -1656(%rbp)
  call f3
  addq $16, %rsp
  jmp main_lbl246

main_lbl246:
  call *-2424(%rbp)
  addq $0, %rsp
  jmp main_lbl247

main_lbl247:
  movq -2504(%rbp), %r8
  movq %r8, -2416(%rbp)
  call *-2472(%rbp)
  movq %rax, -1680(%rbp)
  addq $0, %rsp
  jmp main_lbl248

main_lbl248:
  movq -2416(%rbp), %r8
  cmpq -2592(%rbp), %r8
  movq $0, %r8
  setne %r8b
  movq %r8, -1688(%rbp)
  movq -1680(%rbp), %r8
  addq -1688(%rbp), %r8
  movq %r8, -1704(%rbp)
  pushq -1704(%rbp)
  pushq $0
  call *-2672(%rbp)
  movq %rax, -1712(%rbp)
  addq $16, %rsp
  jmp main_lbl249

main_lbl249:
  movq -1712(%rbp), %r8
  movq %r8, -2416(%rbp)
  pushq $2
  call f2
  addq $16, %rsp
  jmp main_lbl250

main_lbl25:
  pushq -2712(%rbp)
  call f2
  movq %rax, -1832(%rbp)
  addq $16, %rsp
  jmp main_lbl26

main_lbl250:
  jmp main_lbl204

main_lbl251:
  pushq -1728(%rbp)
  pushq $9
  pushq -2720(%rbp)
  call *-2688(%rbp)
  movq %rax, -1736(%rbp)
  addq $32, %rsp
  jmp main_lbl252

main_lbl252:
  movq -1736(%rbp), %r8
  subq $0, %r8
  movq %r8, -1744(%rbp)
  movq $0, %r8
  subq -1744(%rbp), %r8
  movq %r8, -1720(%rbp)
  movq -1720(%rbp), %r8
  movq %r8, -2504(%rbp)
  movq $3, -2408(%rbp)
  jmp main_lbl160

main_lbl253:
  pushq $4
  pushq $7
  pushq -1768(%rbp)
  pushq -2720(%rbp)
  call *-2520(%rbp)
  movq %rax, -1776(%rbp)
  addq $32, %rsp
  jmp main_lbl254

main_lbl254:
  movq -2712(%rbp), %r8
  imulq -1776(%rbp), %r8
  movq %r8, -1800(%rbp)
  movq $0, %r8
  subq -1800(%rbp), %r8
  movq %r8, -1760(%rbp)
  movq -1760(%rbp), %r8
  movq %r8, -2504(%rbp)
  movq -2712(%rbp), %rax
  jmp main_epilogue

main_lbl26:
  pushq -1832(%rbp)
  pushq -1824(%rbp)
  pushq -2680(%rbp)
  call *-2704(%rbp)
  addq $32, %rsp
  jmp main_lbl27

main_lbl27:
  movq $0, %r8
  subq -2712(%rbp), %r8
  movq %r8, -1840(%rbp)
  movq -1840(%rbp), %r8
  movq %r8, -2592(%rbp)
  call f1
  movq %rax, -1848(%rbp)
  addq $0, %rsp
  jmp main_lbl28

main_lbl28:
  pushq -2408(%rbp)
  pushq -1848(%rbp)
  call f3
  movq %rax, -1856(%rbp)
  addq $16, %rsp
  jmp main_lbl29

main_lbl29:
  call f1
  movq %rax, -1864(%rbp)
  addq $0, %rsp
  jmp main_lbl30

main_lbl3:
  pushq $6
  pushq -2416(%rbp)
  call f3
  movq %rax, -2320(%rbp)
  addq $16, %rsp
  jmp main_lbl4

main_lbl30:
  call f1
  movq %rax, -1872(%rbp)
  addq $0, %rsp
  jmp main_lbl31

main_lbl31:
  movq -1864(%rbp), %r8
  cmpq -1872(%rbp), %r8
  movq $0, %r8
  setge %r8b
  movq %r8, -1888(%rbp)
  pushq -1888(%rbp)
  pushq -2720(%rbp)
  pushq -1856(%rbp)
  call f4
  movq %rax, -1896(%rbp)
  addq $32, %rsp
  jmp main_lbl32

main_lbl32:
  call f1
  movq %rax, -1904(%rbp)
  addq $0, %rsp
  jmp main_lbl33

main_lbl33:
  movq -1896(%rbp), %r8
  cmpq -1904(%rbp), %r8
  movq $0, %r8
  setg %r8b
  movq %r8, -1912(%rbp)
  movq -1912(%rbp), %r8
  movq %r8, -2416(%rbp)
  movq -2696(%rbp), %r8
  movq %r8, -2696(%rbp)
  jmp main_lbl34

main_lbl34:
  movq $9, %r8
  cmpq $0, %r8
  jne main_lbl35
  jmp main_lbl36

main_lbl35:
  movq $2, -2712(%rbp)
  movq $8, -2592(%rbp)
  movq $0, %r8
  subq $8, %r8
  movq %r8, -1920(%rbp)
  movq -1920(%rbp), %r8
  movq %r8, -2416(%rbp)
  movq -2712(%rbp), %r8
  movq %r8, -2696(%rbp)
  movq $0, %r8
  subq $8, %r8
  movq %r8, -1928(%rbp)
  pushq $6
  pushq -1928(%rbp)
  call f3
  addq $16, %rsp
  jmp main_lbl37

main_lbl36:
  jmp main_lbl51

main_lbl37:
  movq $3, -2680(%rbp)
  call f1
  movq %rax, -1944(%rbp)
  addq $0, %rsp
  jmp main_lbl38

main_lbl38:
  call f1
  movq %rax, -1952(%rbp)
  addq $0, %rsp
  jmp main_lbl39

main_lbl39:
  pushq -1952(%rbp)
  pushq -1944(%rbp)
  pushq $8
  call *-2432(%rbp)
  movq %rax, -1960(%rbp)
  addq $32, %rsp
  jmp main_lbl40

main_lbl4:
  pushq -2720(%rbp)
  call f2
  movq %rax, -16(%rbp)
  addq $16, %rsp
  jmp main_lbl5

main_lbl40:
  movq $0, %r8
  subq -1960(%rbp), %r8
  movq %r8, -1936(%rbp)
  pushq -1936(%rbp)
  call f2
  movq %rax, -1976(%rbp)
  addq $16, %rsp
  jmp main_lbl41

main_lbl41:
  movq -1976(%rbp), %r8
  movq %r8, -2416(%rbp)
  call f1
  movq %rax, -1984(%rbp)
  addq $0, %rsp
  jmp main_lbl42

main_lbl42:
  movq -2720(%rbp), %r8
  subq -1984(%rbp), %r8
  movq %r8, -1992(%rbp)
  movq -1992(%rbp), %r8
  cmpq -2408(%rbp), %r8
  movq $0, %r8
  setl %r8b
  movq %r8, -2000(%rbp)
  pushq -2000(%rbp)
  pushq -2712(%rbp)
  call f3
  movq %rax, -2008(%rbp)
  addq $16, %rsp
  jmp main_lbl43

main_lbl43:
  movq -2008(%rbp), %r8
  movq %r8, -2712(%rbp)
  call *-2424(%rbp)
  movq %rax, -2016(%rbp)
  addq $0, %rsp
  jmp main_lbl44

main_lbl44:
  movq $2, %rax
  cqo
  idivq -2016(%rbp)
  movq %rax, -2024(%rbp)
  call f1
  movq %rax, -2032(%rbp)
  addq $0, %rsp
  jmp main_lbl45

main_lbl45:
  movq -2032(%rbp), %rax
  cqo
  movq $7, %r8
  idivq %r8
  movq %rax, -2040(%rbp)
  movq -2040(%rbp), %r8
  cmpq -2712(%rbp), %r8
  movq $0, %r8
  setne %r8b
  movq %r8, -2048(%rbp)
  call *-2424(%rbp)
  movq %rax, -2064(%rbp)
  addq $0, %rsp
  jmp main_lbl46

main_lbl46:
  movq $7, %r8
  addq -2064(%rbp), %r8
  movq %r8, -2072(%rbp)
  movq -2048(%rbp), %r8
  addq -2072(%rbp), %r8
  movq %r8, -2080(%rbp)
  movq $4, %r8
  cmpq -2592(%rbp), %r8
  movq $0, %r8
  sete %r8b
  movq %r8, -2088(%rbp)
  call *-2440(%rbp)
  movq %rax, -2096(%rbp)
  addq $0, %rsp
  jmp main_lbl47

main_lbl47:
  pushq -2720(%rbp)
  pushq $7
  pushq -2096(%rbp)
  call *-2728(%rbp)
  movq %rax, -2104(%rbp)
  addq $32, %rsp
  jmp main_lbl48

main_lbl48:
  movq -2088(%rbp), %rax
  cqo
  idivq -2104(%rbp)
  movq %rax, -2112(%rbp)
  pushq -2112(%rbp)
  pushq $1
  pushq -2080(%rbp)
  pushq -2024(%rbp)
  call f5
  addq $32, %rsp
  jmp main_lbl49

main_lbl49:
  call *-2448(%rbp)
  addq $0, %rsp
  jmp main_lbl50

main_lbl5:
  pushq -16(%rbp)
  pushq -2320(%rbp)
  pushq -2720(%rbp)
  pushq -2232(%rbp)
  call f5
  movq %rax, -104(%rbp)
  addq $32, %rsp
  jmp main_lbl6

main_lbl50:
  movq -2592(%rbp), %r8
  movq %r8, -2504(%rbp)
  jmp main_lbl34

main_lbl51:
  pushq $9
  call f2
  movq %rax, -2120(%rbp)
  addq $16, %rsp
  jmp main_lbl54

main_lbl52:
  call f1
  movq %rax, -2152(%rbp)
  addq $0, %rsp
  jmp main_lbl56

main_lbl53:
  movq $7, -2408(%rbp)
  movq $0, -2416(%rbp)
  jmp main_lbl80

main_lbl54:
  movq -2120(%rbp), %r8
  cmpq -2720(%rbp), %r8
  movq $0, %r8
  sete %r8b
  movq %r8, -2128(%rbp)
  pushq -2128(%rbp)
  call f2
  movq %rax, -2136(%rbp)
  addq $16, %rsp
  jmp main_lbl55

main_lbl55:
  cmpq $0, -2136(%rbp)
  jne main_lbl52
  jmp main_lbl53

main_lbl56:
  pushq -2408(%rbp)
  pushq -2152(%rbp)
  pushq -2504(%rbp)
  pushq -2712(%rbp)
  call f5
  movq %rax, -2160(%rbp)
  addq $32, %rsp
  jmp main_lbl57

main_lbl57:
  pushq -2160(%rbp)
  call f2
  movq %rax, -2168(%rbp)
  addq $16, %rsp
  jmp main_lbl58

main_lbl58:
  movq $5, %r8
  cmpq -2168(%rbp), %r8
  movq $0, %r8
  setg %r8b
  movq %r8, -2176(%rbp)
  movq -2176(%rbp), %r8
  movq %r8, -2416(%rbp)
  movq $2, -2712(%rbp)
  call f1
  movq %rax, -2184(%rbp)
  addq $0, %rsp
  jmp main_lbl59

main_lbl59:
  pushq $2
  pushq -2696(%rbp)
  pushq -2184(%rbp)
  call f4
  movq %rax, -2192(%rbp)
  addq $32, %rsp
  jmp main_lbl60

main_lbl6:
  movq -104(%rbp), %r8
  movq %r8, -2712(%rbp)
  movq -2728(%rbp), %r8
  movq %r8, -2728(%rbp)
  movq -2440(%rbp), %r8
  movq %r8, -2448(%rbp)
  movq -2472(%rbp), %r8
  movq %r8, -2464(%rbp)
  movq -2480(%rbp), %r8
  movq %r8, -2480(%rbp)
  movq -2456(%rbp), %r8
  movq %r8, -2520(%rbp)
  movq f2(%rip), %r8
  movq %r8, -2536(%rbp)
  movq -2568(%rbp), %r8
  movq %r8, -2560(%rbp)
  movq -2584(%rbp), %r8
  movq %r8, -2576(%rbp)
  movq -2576(%rbp), %r8
  movq %r8, -2608(%rbp)
  movq -2608(%rbp), %r8
  movq %r8, -2600(%rbp)
  movq -2528(%rbp), %r8
  movq %r8, -2632(%rbp)
  movq -2656(%rbp), %r8
  movq %r8, -2656(%rbp)
  movq -2656(%rbp), %r8
  movq %r8, -2648(%rbp)
  pushq -2408(%rbp)
  call f2
  movq %rax, -192(%rbp)
  addq $16, %rsp
  jmp main_lbl7

main_lbl60:
  call f1
  movq %rax, -2200(%rbp)
  addq $0, %rsp
  jmp main_lbl61

main_lbl61:
  call *-2464(%rbp)
  movq %rax, -2208(%rbp)
  addq $0, %rsp
  jmp main_lbl62

main_lbl62:
  call *-2480(%rbp)
  movq %rax, -2216(%rbp)
  addq $0, %rsp
  jmp main_lbl63

main_lbl63:
  pushq -2216(%rbp)
  pushq -2208(%rbp)
  pushq -2200(%rbp)
  pushq -2192(%rbp)
  call *-2456(%rbp)
  movq %rax, -2224(%rbp)
  addq $32, %rsp
  jmp main_lbl64

main_lbl64:
  pushq $1
  pushq -2224(%rbp)
  call f3
  movq %rax, -2240(%rbp)
  addq $16, %rsp
  jmp main_lbl65

main_lbl65:
  movq -2240(%rbp), %r8
  movq %r8, -2720(%rbp)
  cmpq $4, -2408(%rbp)
  movq $0, %r8
  setle %r8b
  movq %r8, -2256(%rbp)
  call f1
  movq %rax, -2264(%rbp)
  addq $0, %rsp
  jmp main_lbl66

main_lbl66:
  pushq -2504(%rbp)
  pushq -2264(%rbp)
  pushq $5
  call f4
  movq %rax, -2272(%rbp)
  addq $32, %rsp
  jmp main_lbl67

main_lbl67:
  pushq -2592(%rbp)
  pushq $9
  call f3
  movq %rax, -2280(%rbp)
  addq $16, %rsp
  jmp main_lbl68

main_lbl68:
  pushq -2280(%rbp)
  pushq -2272(%rbp)
  pushq $6
  pushq -2256(%rbp)
  call *-2488(%rbp)
  movq %rax, -2288(%rbp)
  addq $32, %rsp
  jmp main_lbl69

main_lbl69:
  movq $0, %r8
  subq -2288(%rbp), %r8
  movq %r8, -2248(%rbp)
  movq -2248(%rbp), %r8
  movq %r8, -2680(%rbp)
  pushq $6
  call f2
  movq %rax, -2296(%rbp)
  addq $16, %rsp
  jmp main_lbl70

main_lbl7:
  movq -192(%rbp), %r8
  movq %r8, -2408(%rbp)
  call f1
  movq %rax, -368(%rbp)
  addq $0, %rsp
  jmp main_lbl8

main_lbl70:
  pushq -2296(%rbp)
  pushq -2592(%rbp)
  call f3
  addq $16, %rsp
  jmp main_lbl71

main_lbl71:
  movq -2592(%rbp), %r8
  movq %r8, -2680(%rbp)
  movq $5, %r8
  subq $8, %r8
  movq %r8, -2304(%rbp)
  pushq -2304(%rbp)
  pushq $2
  call f3
  addq $16, %rsp
  jmp main_lbl72

main_lbl72:
  movq -2416(%rbp), %r8
  imulq -2712(%rbp), %r8
  movq %r8, -2312(%rbp)
  pushq -2312(%rbp)
  call *-2496(%rbp)
  movq %rax, -2328(%rbp)
  addq $16, %rsp
  jmp main_lbl73

main_lbl73:
  pushq -2328(%rbp)
  call f2
  movq %rax, -2336(%rbp)
  addq $16, %rsp
  jmp main_lbl74

main_lbl74:
  pushq $2
  pushq -2336(%rbp)
  pushq -2592(%rbp)
  call f4
  addq $32, %rsp
  jmp main_lbl75

main_lbl75:
  pushq $7
  call *-2512(%rbp)
  movq %rax, -2344(%rbp)
  addq $16, %rsp
  jmp main_lbl76

main_lbl76:
  call f1
  movq %rax, -2352(%rbp)
  addq $0, %rsp
  jmp main_lbl77

main_lbl77:
  cmpq $0, -2352(%rbp)
  movq $0, %r8
  setl %r8b
  movq %r8, -2360(%rbp)
  pushq -2360(%rbp)
  call f2
  movq %rax, -2368(%rbp)
  addq $16, %rsp
  jmp main_lbl78

main_lbl78:
  pushq -2368(%rbp)
  pushq -2408(%rbp)
  pushq -2344(%rbp)
  call f4
  movq %rax, -2376(%rbp)
  addq $32, %rsp
  jmp main_lbl79

main_lbl79:
  movq -2376(%rbp), %r8
  movq %r8, -2720(%rbp)
  movq $2, -2592(%rbp)
  jmp main_lbl51

main_lbl8:
  pushq -368(%rbp)
  call f2
  movq %rax, -456(%rbp)
  addq $16, %rsp
  jmp main_lbl9

main_lbl80:
  movq $10, %r8
  cmpq -2720(%rbp), %r8
  movq $0, %r8
  setge %r8b
  movq %r8, -2384(%rbp)
  pushq -2384(%rbp)
  call f2
  movq %rax, -2392(%rbp)
  addq $16, %rsp
  jmp main_lbl83

main_lbl81:
  call f1
  movq %rax, -40(%rbp)
  addq $0, %rsp
  jmp main_lbl85

main_lbl82:
  jmp main_lbl108

main_lbl83:
  call *-2472(%rbp)
  movq %rax, -2400(%rbp)
  addq $0, %rsp
  jmp main_lbl84

main_lbl84:
  movq -2392(%rbp), %r8
  addq -2400(%rbp), %r8
  movq %r8, -24(%rbp)
  cmpq $0, -24(%rbp)
  jne main_lbl81
  jmp main_lbl82

main_lbl85:
  pushq -40(%rbp)
  call f2
  movq %rax, -48(%rbp)
  addq $16, %rsp
  jmp main_lbl86

main_lbl86:
  movq $0, %r8
  subq -48(%rbp), %r8
  movq %r8, -32(%rbp)
  pushq -2712(%rbp)
  call *-2528(%rbp)
  movq %rax, -64(%rbp)
  addq $16, %rsp
  jmp main_lbl87

main_lbl87:
  movq $0, %r8
  subq -64(%rbp), %r8
  movq %r8, -56(%rbp)
  pushq -56(%rbp)
  pushq -32(%rbp)
  call f3
  movq %rax, -72(%rbp)
  addq $16, %rsp
  jmp main_lbl88

main_lbl88:
  call f1
  movq %rax, -80(%rbp)
  addq $0, %rsp
  jmp main_lbl89

main_lbl89:
  pushq -80(%rbp)
  pushq $2
  pushq $8
  pushq -72(%rbp)
  call *-2520(%rbp)
  addq $32, %rsp
  jmp main_lbl90

main_lbl9:
  pushq -456(%rbp)
  pushq $1
  call f3
  movq %rax, -544(%rbp)
  addq $16, %rsp
  jmp main_lbl10

main_lbl90:
  call f1
  movq %rax, -112(%rbp)
  addq $0, %rsp
  jmp main_lbl91

main_lbl91:
  movq $0, %r8
  subq -112(%rbp), %r8
  movq %r8, -96(%rbp)
  movq $0, %r8
  subq -96(%rbp), %r8
  movq %r8, -88(%rbp)
  movq -88(%rbp), %r8
  movq %r8, -2408(%rbp)
  movq -2720(%rbp), %r8
  movq %r8, -2504(%rbp)
  pushq -2696(%rbp)
  call *-2536(%rbp)
  movq %rax, -120(%rbp)
  addq $16, %rsp
  jmp main_lbl92

main_lbl92:
  pushq -2720(%rbp)
  pushq -2720(%rbp)
  pushq -120(%rbp)
  call f4
  addq $32, %rsp
  jmp main_lbl93

main_lbl93:
  call f1
  movq %rax, -128(%rbp)
  addq $0, %rsp
  jmp main_lbl94

main_lbl94:
  call f1
  movq %rax, -136(%rbp)
  addq $0, %rsp
  jmp main_lbl95

main_lbl95:
  pushq -136(%rbp)
  pushq -128(%rbp)
  pushq $10
  call f4
  movq %rax, -144(%rbp)
  addq $32, %rsp
  jmp main_lbl96

main_lbl96:
  call f1
  movq %rax, -152(%rbp)
  addq $0, %rsp
  jmp main_lbl97

main_lbl97:
  movq -144(%rbp), %r8
  cmpq -152(%rbp), %r8
  movq $0, %r8
  sete %r8b
  movq %r8, -160(%rbp)
  call f1
  movq %rax, -168(%rbp)
  addq $0, %rsp
  jmp main_lbl98

main_lbl98:
  pushq -168(%rbp)
  pushq -2680(%rbp)
  pushq -160(%rbp)
  pushq -2504(%rbp)
  call f5
  movq %rax, -176(%rbp)
  addq $32, %rsp
  jmp main_lbl99

main_lbl99:
  pushq -176(%rbp)
  pushq -2720(%rbp)
  call *-2544(%rbp)
  addq $16, %rsp
  jmp main_lbl100

main_epilogue:
  movq %rbp, %rsp
  popq %rbp
  ret

.out_of_bounds:
  lea out_of_bounds_msg(%rip), %rdi
  call _cflat_panic

.invalid_alloc_length:
  lea invalid_alloc_msg(%rip), %rdi
  call _cflat_panic
        
